import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import { AppSidebar } from '@/src/components/app-sidebar';
import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
  BreadcrumbSeparator,
} from '@/src/components/ui/breadcrumb';
import { Separator } from '@/src/components/ui/separator';
import { SidebarInset, SidebarProvider, SidebarTrigger } from '@/src/components/ui/sidebar';
import { ScrollArea } from '@radix-ui/react-scroll-area';
import { ThemeProvider } from '../components/theme-provider';
import { getLocale, getMessages, getTranslations } from 'next-intl/server';
import { NextIntlClientProvider } from 'next-intl';
import { RightHeader } from '../components/common/right-header';
import { Toaster } from 'sonner';
import { Locale } from '../i18n/config';
import { Provider } from '@radix-ui/react-tooltip';
import Providers from './Provider';
const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

// export async function generateMetadata(props: { params: { locale: Locale } }): Promise<Metadata> {
//   const { params } = props;
//   const t = await getTranslations({ locale: params.locale, namespace: 'langdingPage' });

//   return {
//     title: t('metadata.title'),
//     description: t('metadata.description'),
//   };
// }

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const messages = await getMessages();
  const locale = await getLocale();
  return (
    <html lang={locale}>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <Toaster />
        <Providers messages={messages} locale={locale}>
          <AppSidebar />
          <SidebarInset>
            <header className="bg-background sticky top-0 flex justify-between  items-center gap-2 border-b p-4">
              <div className="flex items-center">
                <SidebarTrigger className="-ml-1" />
                <Separator orientation="vertical" className="mr-2 data-[orientation=vertical]:h-4" />
                <Breadcrumb>
                  <BreadcrumbList>
                    <BreadcrumbItem className="hidden md:block">
                      <BreadcrumbLink href="#">All Inboxes</BreadcrumbLink>
                    </BreadcrumbItem>
                    <BreadcrumbSeparator className="hidden md:block" />
                    <BreadcrumbItem>
                      <BreadcrumbPage>Inbox</BreadcrumbPage>
                    </BreadcrumbItem>
                  </BreadcrumbList>
                </Breadcrumb>
              </div>
              <RightHeader />
            </header>
            <ScrollArea className="h-225 overflow-auto overscroll-contain">
              <div className="flex flex-1 flex-col gap-1 px-3">{children}</div>
            </ScrollArea>
          </SidebarInset>
        </Providers>
      </body>
    </html>
  );
}
